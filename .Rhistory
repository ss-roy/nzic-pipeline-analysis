)
# 9. Predict delays for uncompleted projects using the model
results_model2$predicted_delay <- predict(delay_model_2, newdata = results_model2)  # Generate predictions
# 10. View the results with predicted delays
print(results_model2)
# Scale the predicted delays between 0 and 1 for each sector and convert to percent
results_model2 <- results_model2 %>%
group_by(ProjectRegion, CommissionAssignedInfrastructureSector) %>%  # Group by region and sector
mutate(
# Check if there are any non-NA values in predicted_delay
non_na_count = sum(!is.na(predicted_delay)),
# Calculate min and max of predicted delays for the group if there are non-NA values
min_predicted_delay = ifelse(non_na_count > 0, min(predicted_delay, na.rm = TRUE), NA),
max_predicted_delay = ifelse(non_na_count > 0, max(predicted_delay, na.rm = TRUE), NA),
# Scale the predicted delays and convert to percent
likelihood = case_when(
is.na(predicted_delay) ~ NA_real_,  # Preserve NAs
min_predicted_delay == max_predicted_delay ~ 50,  # Assign 50% if all values are the same
TRUE ~ ((predicted_delay - min_predicted_delay) / (max_predicted_delay - min_predicted_delay)) * 100  # Normal scaling to percent
)
) %>%
ungroup() %>%
select(-min_predicted_delay, -max_predicted_delay, -non_na_count)  # Optionally remove temporary columns
# Clean up the incomplete projects data frame by removing unnecessary columns
results_model2 <- results_model2 %>%
select(-InformationSubmissionQuarter, -complete, -completedonorbefore,
-total_delay, -actual_duration, -delay_ratio, -budget_min, -budget_max,
-project_status_indicator, -completed_on_time)
print(results_model2)
# Plot 1: Predicted Delay Faceted by Region and Sector
p1_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Boxplot to show distribution of predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +  # Create facets by sector
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate x-axis text for better readability
ggsave("out/plots/16_lm1_predicted_delay.png", plot = p1_lm2, width = 16, height = 12)
# Plot 2: Likelihood Faceted by Region and Sector
p2_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = likelihood, fill = CommissionAssignedInfrastructureSector)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Boxplot for likelihood
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +  # Create facets by sector
labs(title = "Likelihood of Project Completion by Project Region and Sector",
x = "Project Region",
y = "Likelihood (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate x-axis text for better readability
ggsave("out/plots/16a_lm1_predicted_likelihood.png", plot = p2_lm2, width = 16, height = 12)
# Violin Plot for Predicted Delay - Provide a richer view of the distribution of the data compared to boxplots
p1_violin_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_violin(trim = TRUE, alpha = 0.6) +  # Violin plot for predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave("out/plots/17_lm1_predicted_delay_violin.png", plot = p1_violin_lm2, width = 16, height = 12)
# Violin Plot for Likelihood
p2_violin_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = likelihood, fill = CommissionAssignedInfrastructureSector)) +
geom_violin(trim = TRUE, alpha = 0.6) +  # Violin plot for likelihood
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +
labs(title = "Likelihood of Project Completion by Project Region and Sector",
x = "Project Region",
y = "Likelihood (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave("out/plots/17a_lm1_predicted_likelihood_violin.png", plot = p2_violin_lm2, width = 16, height = 12)
# Print the plots
print(p1_lm2)
print(p2_lm2)
print(p1_violin_lm2)
print(p2_violin_lm2)
range(projects_data)
range(projects_data$EstimatedQuarterProjectRangeStart)
# Read the pipeline data
data <- read_excel(path = "data/Pipeline-data-as-at-2024-09-30.xlsx", sheet = 'pipeline-data')
colnames(data)
View(completed_projects_plot)
results_model1
delay_model_1
# Display the summary of the model to check accuracy and coefficients
summary(delay_model_1)
# Display the summary of the model to check accuracy and coefficients
summary(delay_model_2)
# Display the summary of the model to check accuracy and coefficients
summary(delay_model_1)
p2_violin_lm1
p1_lm1
p2_lm1
p1_lm1
p1_violin_lm2
p2_violin_lm2
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/4_linear_model_macro.R", echo=TRUE)
source("source/2_preprocess_features.R")
completed_projects <- projects_data %>%
filter(complete == 1 & EstimatedQuarterConstructionCompletion <= "2024-10-01")# %>%
# 3. Calculate avg_group_delay for completed projects
avg_delay_by_region <- completed_projects %>%
group_by(ProjectRegion) %>%  # Group by project region
summarise(avg_group_delay = mean(total_delay, na.rm = TRUE), .groups = 'drop')  # Calculate average delay per region
# 4. Join avg_group_delay back to completed_projects
completed_projects <- completed_projects %>%
left_join(avg_delay_by_region, by = "ProjectRegion")  # Merge average delay back to completed projects
# Using a stepwise model to see what are the most important features
# Fit the full model
delay_model_2 <- lm(total_delay ~ avg_group_delay + budget_min + budget_max + planned_duration +
funding_status_indicator + project_status_indicator + ProjectRegionCode +
CPI_Delta_Percent + GDP_Delta_Percent,
data = completed_projects)
# Perform stepwise regression
stepwise_model <- step(delay_model_2, direction = "both", trace = TRUE)
# Display the summary of the model to check accuracy and coefficients
summary(delay_model_2)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/4_linear_model_macro.R", echo=TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
source("source/3_linear_model.R")
# Plot 1: Predicted Delay Faceted by Region and Sector
p1_lm1 <- ggplot(results_model1, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Boxplot to show distribution of predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +  # Create facets by sector
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate x-axis text for better readability
ggsave("out/plots/13_lm1_predicted_delay.png", plot = p1_lm1, width = 16, height = 12)
# Plot 1: Predicted Delay Faceted by Region and Sector
p1_lm1 <- ggplot(results_model1, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Boxplot to show distribution of predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +  # Create facets by sector
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate x-axis text for better readability
ggsave("out/plots/13_lm1_predicted_delay.png", plot = p1_lm1, width = 16, height = 12)
# Plot 1: Predicted Delay Faceted by Region and Sector
p1_lm1 <- ggplot(results_model1, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Boxplot to show distribution of predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +  # Create facets by sector
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate x-axis text for better readability
ggsave("out/plots/13_lm1_predicted_delay.png", plot = p1_lm1, width = 16, height = 12)
# Plot 2: Likelihood Faceted by Region and Sector
p2_lm1 <- ggplot(results_model1, aes(x = ProjectRegion, y = likelihood, fill = CommissionAssignedInfrastructureSector)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Boxplot for likelihood
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +  # Create facets by sector
labs(title = "Likelihood of Project Completion by Project Region and Sector",
x = "Project Region",
y = "Likelihood (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
source("source/4_linear_model_macro.R")
p1_violin_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_violin(trim = TRUE, alpha = 0.6) +  # Violin plot for predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p2_violin_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = likelihood, fill = CommissionAssignedInfrastructureSector)) +
geom_violin(trim = TRUE, alpha = 0.6) +  # Violin plot for likelihood
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +
labs(title = "Likelihood of Project Completion by Project Region and Sector",
x = "Project Region",
y = "Likelihood (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/3_linear_model.R", echo=TRUE)
p1_violin_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_violin(trim = TRUE, alpha = 0.6) +  # Violin plot for predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p1_violin_lm2
p2_violin_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = likelihood, fill = CommissionAssignedInfrastructureSector)) +
geom_violin(trim = TRUE, alpha = 0.6) +  # Violin plot for likelihood
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +
labs(title = "Likelihood of Project Completion by Project Region and Sector",
x = "Project Region",
y = "Likelihood (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p2_violin_lm2
p1_violin_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_violin(trim = TRUE, alpha = 0.6) +  # Violin plot for predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p1_violin_lm2
knitr::opts_chunk$set(include = FALSE)
library(dplyr)
library(ggplot2)
library(tidyr)
summary(delay_model_2)
# Residuals vs Fitted Values Plot
p1 <- ggplot(completed_projects, aes(x = fitted(delay_model_2), y = residuals(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuals vs. Fitted Values",
x = "Fitted Values",
y = "Residuals") +
theme_minimal()
p1
p2
p1
ggplot(data.frame(residuals = residuals(delay_model_2)), aes(x = residuals)) +
geom_histogram(bins = 30, fill = "blue", alpha = 0.7) +
labs(title = "Histogram of Residuals",
x = "Residuals",
y = "Frequency") +
theme_minimal()
ggplot(completed_projects, aes(x = fitted(delay_model_2), y = residuals(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuals vs. Fitted Values",
x = "Fitted Values",
y = "Residuals") +
theme_minimal()
ggplot(completed_projects, aes(x = total_delay, y = fitted(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(title = "Predicted vs Actual Values",
x = "Actual Total Delay",
y = "Predicted Total Delay") +
theme_minimal()
p2 <- ggplot(completed_projects, aes(x = total_delay, y = fitted(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(title = "Predicted vs Actual Values",
x = "Actual Total Delay",
y = "Predicted Total Delay") +
theme_minimal()
p2
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/4_linear_model_macro.R", echo=TRUE)
p1 <- ggplot(completed_projects, aes(x = fitted(delay_model_2), y = residuals(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuals vs. Fitted Values",
x = "Fitted Values",
y = "Residuals") +
theme_minimal()
p1
# Predicted vs Actual Values Plot
p2 <- ggplot(completed_projects, aes(x = total_delay, y = fitted(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(title = "Predicted vs Actual Values",
x = "Actual Total Delay",
y = "Predicted Total Delay") +
theme_minimal()
p2
# Residuals Histogram to check normality of residuals
ggplot(data.frame(residuals = residuals(delay_model_2)), aes(x = residuals)) +
geom_histogram(bins = 30, fill = "blue", alpha = 0.7) +
labs(title = "Histogram of Residuals",
x = "Residuals",
y = "Frequency") +
theme_minimal()
# Residuals Histogram to check normality of residuals
ggplot(data.frame(residuals = residuals(delay_model_2)), aes(x = residuals)) +
geom_histogram(bins = 30, fill = "blue", alpha = 0.7) +
labs(title = "Histogram of Residuals",
x = "Residuals",
y = "Frequency") +
theme_minimal()
# Residuals vs Fitted Values Plot
p1 <- ggplot(completed_projects, aes(x = fitted(delay_model_2), y = residuals(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuals vs. Fitted Values",
x = "Fitted Values",
y = "Residuals") +
theme_minimal()
p1
# Residuals vs Fitted Values Plot
p1 <- ggplot(completed_projects, aes(x = fitted(delay_model_2), y = residuals(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuals vs. Fitted Values",
x = "Fitted Values",
y = "Residuals") +
theme_minimal()
p1
# Residuals vs Fitted Values Plot
p1 <- ggplot(completed_projects, aes(x = fitted(delay_model_2), y = residuals(delay_model_2))) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(title = "Residuals vs. Fitted Values",
x = "Fitted Values",
y = "Residuals") +
theme_minimal()
p1
# Residuals Histogram to check normality of residuals
ggplot(data.frame(residuals = residuals(delay_model_2)), aes(x = residuals)) +
geom_histogram(bins = 30, fill = "blue", alpha = 0.7) +
labs(title = "Histogram of Residuals",
x = "Residuals",
y = "Frequency") +
theme_minimal()
p1_violin_lm2 <- ggplot(results_model2, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_violin(trim = TRUE, alpha = 0.6) +  # Violin plot for predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p1_violin_lm2
library(dplyr)
library(ggplot2)
library(tidyr)
# Plot 1: Predicted Delay Faceted by Region and Sector
p1_lm1 <- ggplot(results_model1, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Boxplot to show distribution of predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +  # Create facets by sector
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate x-axis text for better readability
# Plot 1: Predicted Delay Faceted by Region and Sector
p1_lm1 <- ggplot(results_model1, aes(x = ProjectRegion, y = predicted_delay, fill = CommissionAssignedInfrastructureSector)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Boxplot to show distribution of predicted delay
facet_wrap(~ CommissionAssignedInfrastructureSector, scales = "free_y") +  # Create facets by sector
labs(title = "Predicted Delay by Project Region and Sector",
x = "Project Region",
y = "Predicted Delay") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # Rotate x-axis text for better readability
source("source/3_linear_model.R")
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/main.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/0_functions.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/0_functions.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/1_read_inputs.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/2_preprocess_features.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/3_linear_model.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/4_linear_model_macro.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/3_linear_model.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/4_linear_model_macro.R", echo=TRUE)
source("~/Documents/Resume-Job Search/Phase V/NZIC/source/6_basics_plots.R", echo=TRUE)
read.csv("out/results_model_2.csv")
results_lm1 <- read.csv("out/results_model_2.csv")
lm1 %>% head()
lm1 %>% head()
results_lm1 %>% head()
colnames (results_lm1)
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
sample_n(3)
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
sample_n(3)
results_lm1 <- read.csv("out/results_model_1.csv")
results_lm1 %>% head()
colnames (results_lm1)
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
sample_n(3)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
sample_n(3)
results_lm2 <- read.csv("out/results_model_2.csv")
results_lm2 %>% head()
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
sample_n(3)
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
sample_n(3)
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
%>% filter(PimaryKey = c("IP012288", " IP011088", "IP011162"))
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
%>% filter(PimaryKey = c("IP012288", " IP011088", "IP011162"))
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
%>% filter(PimaryKey = c("IP012288", " IP011088", "IP011162")) %>%
sample_n(3)
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
%>% filter(PimaryKey %in% c("IP012288", " IP011088", "IP011162")) %>%
sample_n(3)
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162")) %>%
sample_n(3)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162")) %>%
sample_n(3)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162")) %>%
sample_n(3)
results_lm1 <- read.csv("out/results_model_1.csv")
results_lm1 %>% head()
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162")) %>%
sample_n(3)
results_lm2 <- read.csv("out/results_model_2.csv")
results_lm2 %>% head()
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162")) %>%
sample_n(3)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162")) %>%
sample_n(3, replace = TRUE)  # Sampling with replacement
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162")) %>%
sample_n(3)
View(region_summary_planned)
summary(lm2)
View(delay_model_2)
summary(delay_model_2)
View(region_summary_completed)
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162"))
results_lm2 <- read.csv("out/results_model_2.csv")
results_lm2 %>% head()
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162"))
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP012288", "IP011088", "IP011162"))
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c( "IP011088", "IP011162"))
results_lm2 <- read.csv("out/results_model_2.csv")
results_lm2 %>% head()
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP011088", "IP011162"))
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c( "IP011088", "IP011162"))
results_lm2 %>%
# select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP011088", "IP011162"))
results_lm1 %>%
# select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c( "IP011088", "IP011162"))
results_lm1 %>%
# select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c( "IP011088", "IP011162"))
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
filter(PrimaryKey %in% c("IP011088", "IP011162"))
View(results_lm2)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
sample_n(3)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood,ProjectStatus) %>%
sample_n(3)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood,ProjectStatus) %>%
sample_n(5)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood,ProjectStatus) %>%
sample_n(4)
results_lm2 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood,ProjectStatus) %>%
sample_n(4)
results_lm2 %>%
select(ProjectName, ProjectRegion, EstimatedQuarterProjectRangeCompletion,predicted_delay, likelihood,ProjectStatus,Es) %>%
sample_n(4)
results_lm2 %>%
select(ProjectName, ProjectRegion, EstimatedQuarterProjectRangeCompletion,predicted_delay, likelihood,ProjectStatus) %>%
sample_n(4)
results_lm2 %>%
select(ProjectName, ProjectRegion, EstimatedQuarterProjectRangeCompletion,predicted_delay, likelihood,ProjectStatus) %>%
sample_n(4)
results_lm1 <- read.csv("out/results_model_1.csv")
results_lm1 %>%
select(PrimaryKey, ProjectName, ProjectRegion, predicted_delay, likelihood) %>%
sample_n(4)
results_lm2 <- read.csv("out/results_model_2.csv")
results_lm2 %>%
select(ProjectName, ProjectRegion, EstimatedQuarterProjectRangeCompletion,predicted_delay, likelihood,ProjectStatus) %>%
sample_n(4)
# This script will visualise the predictions of linear model
source("source/6_basics_plots.R")
source("source/3_linear_model.R")
source("source/4_linear_model_macro.R")
source("source/6_basics_plots.R")
View(cpi)
getwd()
git remote add origin https://github.com/ss-roy/nzic-pipeline-analysis.git
git remote add origin https://github.com/ss-roy/nzic-pipeline-analysis.git
getwd()
